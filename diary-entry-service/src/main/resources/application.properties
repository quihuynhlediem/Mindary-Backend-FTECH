spring.application.name=diary-entry-service
spring.application.version=1.0.0
server.port=8082
jwt.secret=your-256-bit-secret-key-here-make-it-at-least-32-bytes-long
#spring.data.mongodb.uri=mongodb+srv://tannm2005:63W9tO6SGORuuUoi@cluster0.6kf03.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
#spring.data.mongodb.database=mindary_ver2

# Connect to RabbitMQ
# Configuration for Spring AMQP
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#rabbitmq.queue.analysis.name = diary_analysis
#rabbitmq.queue.analysis_result.name = diary_analysis_result
#rabbitmq.exchange.name = diary_exchange
#rabbitmq.routing_key.analysis.name = diary_analysis_routing_key
#rabbitmq.routing_key.analysis_result.name = diary_analysis_result_routing_key

# Configuration connect to NeonDB
spring.datasource.url=jdbc:postgresql://ep-floral-unit-a1coo5r7-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
spring.datasource.username=neondb_owner
spring.datasource.password=npg_Qb9cu8ixYZVJ
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.hikari.maximum-pool-size=5

# Configuration connect to AWS S3
#aws.accessKeyId=AKIA3FLD2UHVSS2KGXP6
#aws.secretAccessKey=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
#aws.region=ap-southeast-2
#aws.s3.bucketname=mindary

# Spring doc config
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/diary-entry-service/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/diary-entry-service/swagger-ui.html